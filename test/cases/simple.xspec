<?xml version="1.0" encoding="UTF-8"?>

<!--
    This usage of @stylesheet is because we are not testing a stylesheet
    actually, but we need this import statement in the compiled suite.  So...
    
    We should rather add support for testing webapps using XSpec a first-class
    citizen support...
-->

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:h="http://www.w3.org/1999/xhtml"
               xmlns:http="http://expath.org/ns/http-client"
               stylesheet="http://expath.org/ns/http-client.xsl">

   <x:variable name="uri" select="'http://localhost:9090/servlex/hello-world'"/>

   <x:scenario label="assertions" shared="yes">
      <!-- first result item must be a http:response element -->
      <x:expect label="result elem"   assert="$x:result[1] instance of element(http:response)"/>
      <!-- its status attribute must be = 200 -->
      <x:expect label="status is 200" assert="$x:result[1]/xs:integer(@status) eq 200"/>
      <!-- in any way for a request test, the server must send back an
           ML document, so the result sequence must have exactly 2
           items (the http:response element, and the XML payload) -->
      <x:expect label="result count"  assert="count($x:result) eq 2"/>
      <!-- result is a HTML document -->
      <x:expect label="content type"  assert="
          matches(
            $x:result[1]/http:header[@name eq 'content-type']/@value,
            'application/xhtml\+xml(;charset=UTF-8)?')"/>
      <x:expect label="document type" assert="
          $x:result[2] instance of document-node(element(h:html))"/>
   </x:scenario>

   <x:scenario label="simple-001">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title"  context="$html/h:head/h:title">
         <h:title>Hello, world!</h:title>
      </x:expect>
      <x:expect label="body title"  context="$html/h:body/h:h2">
         <h:h2>Hello, world!</h:h2>
      </x:expect>
      <x:expect label="form count"  assert="count($html//h:form) eq 7"/>
      <x:expect label="xslt form"   assert="count($html//h:form[@action eq 'stylesheet']) eq 1"/>
      <x:expect label="xslt form"   assert="count($html//h:form[@action eq 'template']) eq 1"/>
      <x:expect label="xslt form"   assert="count($html//h:form[@action eq 'xslt-fun']) eq 1"/>
      <x:expect label="xslt form"   assert="count($html//h:form[@action eq 'query']) eq 1"/>
      <x:expect label="xquery form" assert="count($html//h:form[@action eq 'xquery-fun']) eq 1"/>
      <x:expect label="xproc form"  assert="count($html//h:form[@action eq 'pipeline']) eq 1"/>
   </x:scenario>

   <!-- TODO: How to test that this is the stylesheet that is actually run? -->
   <x:scenario label="simple-002">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/stylesheet?who=me" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, me!</h:title>
      </x:expect>
      <x:expect label="body para xslt" context="$html/h:body/h:p">
         <h:p>Hello, me! (in XSLT)</h:p>
      </x:expect>
   </x:scenario>

   <!-- TODO: How to test that this is the template that is actually run? -->
   <x:scenario label="simple-003">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/template?who=me" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, me!</h:title>
      </x:expect>
      <x:expect label="body para xslt" context="$html/h:body/h:p">
         <h:p>Hello, me! (in XSLT)</h:p>
      </x:expect>
   </x:scenario>

   <!-- TODO: How to test that this is the function that is actually run? -->
   <x:scenario label="simple-004">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/xslt-fun?who=me" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, me!</h:title>
      </x:expect>
      <x:expect label="body para xslt" context="$html/h:body/h:p">
         <h:p>Hello, me! (in XSLT)</h:p>
      </x:expect>
   </x:scenario>

   <!-- TODO: How to test that this is the query that is actually run? -->
   <x:scenario label="simple-005">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/query?who=you" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, you!</h:title>
      </x:expect>
      <x:expect label="body para xquery" context="$html/h:body/h:p">
         <h:p>Hello, you! (in XQuery)</h:p>
      </x:expect>
   </x:scenario>

   <!-- TODO: How to test that this is the function that is actually run? -->
   <x:scenario label="simple-006">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/xquery-fun?who=you" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, you!</h:title>
      </x:expect>
      <x:expect label="body para xquery" context="$html/h:body/h:p">
         <h:p>Hello, you! (in XQuery)</h:p>
      </x:expect>
   </x:scenario>

   <x:scenario label="simple-007">
      <x:call function="http:send-request">
         <x:param>
            <http:request href="{ $uri }/pipeline?who=yo" method="get"/>
         </x:param>
      </x:call>
      <x:like label="assertions"/>
      <x:variable name="html" select="$x:result[2]/h:html"/>
      <x:expect label="head title" context="$html/h:head/h:title">
         <h:title>Hello, yo!</h:title>
      </x:expect>
      <x:expect label="body para xproc" context="$html/h:body/h:p">
         <h:p>Hello, yo! (in XProc)</h:p>
      </x:expect>
   </x:scenario>

</x:description>
